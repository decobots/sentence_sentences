{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\App.svelte",
    "..\\src\\Word.svelte",
    "..\\src\\Space.svelte",
    "..\\src\\Hang.svelte",
    "..\\src\\Input.svelte",
    "..\\src\\Punctuation.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    import Word from './Word.svelte';\r\n    import Space from './Space.svelte';\r\n    import Hang from './Hang.svelte'\r\n    import { onMount } from 'svelte';\r\n\tvar line = '';\r\n    onMount(async () => {\r\n\t\tconst res = await fetch(`https://sentencesentences.herokuapp.com/quotes`);\r\n\t\tline = await res.json();\r\n\t});\r\n\r\n\r\n\t$: dividedLine = line.split(' ');\r\n    let guessedLetters = [];\r\n    let errors = 12;\r\n\r\n    function addedGuessedLetter(event) {\r\n      guessedLetters = [...guessedLetters, event.detail.text];\r\n    }\r\n\r\n    function help(){\r\n        const old_length =new Set(guessedLetters).size;\r\n        for(let i=0;i<line.length-1;i++){\r\n            const letter = line[i];\r\n            console.log(letter);\r\n            if (!letter.match(/[a-zA-zа-яА-Я]/i)){\r\n                continue;\r\n            }\r\n            guessedLetters= [...guessedLetters, letter];\r\n\r\n            const new_length = new Set(guessedLetters).size;\r\n\r\n            if (new_length>old_length){\r\n                errors-=1;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n</script>\r\n<style>\r\n    :global(body) {\r\n        background: #efefef;\r\n        min-height: 100vmin;\r\n        margin: 0;\r\n        display: flex;\r\n        justify-content: center;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n    div {\r\n        width: 80vw;\r\n    }\r\n</style>\r\n<Hang {errors}/>\r\n<p on:click={help}>help</p>\r\n<br/>\r\n<div class=\"text\">\r\n\r\n    {#each dividedLine as word }\r\n\t\t<Word word={word} on:guess={addedGuessedLetter} on:error={e=>{errors=errors-1}} guessedLetters={guessedLetters}/>\r\n\t\t<Space/>\r\n\t{/each}\r\n</div>\r\n",
    "<script>\r\n    import Input from './Input.svelte';\r\n    import Punctuation from './Punctuation.svelte';\r\n\texport let word='';\r\n\texport let guessedLetters=[];\r\n\r\n</script>\r\n<style>\r\n    div {\r\n        display: inline-block;\r\n    }\r\n</style>\r\n<div>\r\n    {#each word as letter}\r\n\r\n\t\t{#if letter.match(/[A-Za-zА-Яа-я]/)}\r\n\t\t    <Input answer={letter} madeCorrect={guessedLetters.includes(letter)} on:guess on:error/>\r\n\t\t{:else}\r\n\t\t    <Punctuation symbol={letter}/>\r\n\t\t{/if}\r\n\t{/each}\r\n\r\n</div>\r\n",
    "<style>\r\n    span {\r\n            width: 0.3em;\r\n           display: inline-block;\r\n    }\r\n</style>\r\n<span> </span>",
    "<script>\r\n\texport let errors=0;\r\n</script>\r\n<style>\r\n.over{\r\n    font-size: 2em;\r\n    color: darkred;\r\n\r\n}\r\n</style>\r\n{#if errors>0}\r\n    <p>Number of errors = {errors}</p>\r\n   {:else}\r\n   <p class=\"over\">Game over!</p>\r\n   {/if}",
    "<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n\texport let answer = '';\r\n\texport let madeCorrect= false;\r\n\tlet value='';\r\n\tlet hover = false;\r\n\tconst dispatch = createEventDispatcher();\r\n\t$: isCorrect = (answer.toLowerCase()===value.toLowerCase());\r\n\t$: if (isCorrect && !madeCorrect) {dispatch('guess',{text: value.toLowerCase()});}\r\n\t$: if (value && !isCorrect && !madeCorrect) {dispatch('error',{text: 'error made'});}\r\n    $: if(!hover && value && !((answer.toLowerCase()===value.toLowerCase()))) {value=''}\r\n\r\n</script>\r\n<style>\r\ninput {\r\n    border:  1px dotted #bdc3c7;\r\n    padding:  0.5em 0 0.5em 0 ;\r\n    background: 0;\r\n    margin: 0;\r\n    outline: none;\r\n    width: 1.5em;\r\n    height: 1.5em;\r\n    font-size: 1em;\r\n    transition: padding 0.3s 0.2s ease;\r\n\r\n}\r\n\r\n.inp {\r\n    display: inline-block;\r\n\r\n    margin: 0;\r\n    background: 0;\r\n    width: 1.5em;\r\n    height: 1.4em;\r\n    font-size: 1em;\r\n    text-align: center;\r\n\r\n\r\n}\r\n\r\n.field {\r\n    position: relative;\r\n    display: inline-block;\r\n    margin: 0.5em 0.1em;\r\n}\r\n\r\n.field .line {\r\n\r\n    height: 3px;\r\n    position: absolute;\r\n    left: 0;\r\n      right: 0;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n      width: 1.4em;\r\n    bottom: -0.4em;\r\n    background: #bdc3c7;\r\n}\r\n\r\n.field .colorLine {\r\n    bottom: -.5em;\r\n    background: #1abc9c;\r\n    }\r\n\r\n</style>\r\n<div class=\"field\">\r\n    {#if !(isCorrect || madeCorrect)}\r\n        <input  maxlength=\"1\" size=\"1\" type=\"text\" bind:value=\"{value}\" on:focus={e=>{hover=true}}\r\n        on:focusout={e=>{hover=false}}>\r\n        <div class={hover ? 'line colorLine':'line'}/>\r\n\r\n    {:else}\r\n        {answer}\r\n    {/if}\r\n</div>",
    "<script>\r\n    export let symbol;\r\n</script>\r\n<style>\r\n    span {\r\n          width: 0.2em;\r\n        display: inline-block;\r\n    }\r\n</style>\r\n<span>{symbol}</span>"
  ],
  "names": [],
  "mappings": "AAyCY,IAAI,AAAE,CAAC,AACX,UAAU,CAAE,OAAO,CACnB,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,AACvB,CAAC,AACD,GAAG,cAAC,CAAC,AACD,KAAK,CAAE,IAAI,AACf,CAAC;AC5CD,GAAG,eAAC,CAAC,AACD,OAAO,CAAE,YAAY,AACzB,CAAC;ACTD,IAAI,cAAC,CAAC,AACE,KAAK,CAAE,KAAK,CACb,OAAO,CAAE,YAAY,AAC5B,CAAC;ACAL,mBAAK,CAAC,AACF,SAAS,CAAE,GAAG,CACd,KAAK,CAAE,OAAO,AAElB,CAAC;ACMD,KAAK,eAAC,CAAC,AACH,MAAM,CAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAC3B,OAAO,CAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAC1B,UAAU,CAAE,CAAC,CACb,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,AAEtC,CAAC,AAeD,MAAM,eAAC,CAAC,AACJ,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,YAAY,CACrB,MAAM,CAAE,KAAK,CAAC,KAAK,AACvB,CAAC,AAED,qBAAM,CAAC,KAAK,eAAC,CAAC,AAEV,MAAM,CAAE,GAAG,CACX,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACL,KAAK,CAAE,CAAC,CACR,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,CAClB,KAAK,CAAE,KAAK,CACd,MAAM,CAAE,MAAM,CACd,UAAU,CAAE,OAAO,AACvB,CAAC,AAED,qBAAM,CAAC,UAAU,eAAC,CAAC,AACf,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,OAAO,AACnB,CAAC;AC1DD,IAAI,eAAC,CAAC,AACA,KAAK,CAAE,KAAK,CACd,OAAO,CAAE,YAAY,AACzB,CAAC"
}